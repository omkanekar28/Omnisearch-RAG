═══════════════════════════════════════════════════════════════════════════════
                        OMNISEARCH-RAG SYSTEM FLOW
═══════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────┐
│                          INGESTION PIPELINE                                  │
└─────────────────────────────────────────────────────────────────────────────┘

[User Uploads Files]
        │
        ├──→ PDF files (.pdf)
        ├──→ Excel files (.xlsx, .xls, .csv)
        ├──→ Images (.jpg, .png)
        ├──→ Text files (.txt, .md)
        └──→ URLs (web links)
        │
        ↓
┌───────────────────────┐
│   File Type Router    │  ← Determines which processor to use
└───────────────────────┘
        │
        ├──────────┬──────────┬──────────┬──────────┬──────────┐
        ↓          ↓          ↓          ↓          ↓          ↓
┌───────────┐ ┌───────────┐ ┌───────────┐ ┌───────────┐ ┌───────────┐
│PDF Process│ │Excel Proc │ │Image Proc │ │Text Proc  │ │Web Scraper│
│(PyMuPDF   │ │(Pandas/   │ │(Tesseract)│ │(Plain read│ │(Beautiful │
│ 4LLM)     │ │ OpenPyXL) │ │           │ │)          │ │ Soup)     │
│           │ │           │ │           │ │           │ │           │
└───────────┘ └───────────┘ └───────────┘ └───────────┘ └───────────┘
        │          │          │          │          │
        │          ↓          │          │          │
        │  ┌───────────────┐ │          │          │
        │  │Excel Processor│ │          │          │
        │  │  Handles:     │ │          │          │
        │  │- Multiple     │ │          │          │
        │  │  sheets       │ │          │          │
        │  │- Column       │ │          │          │
        │  │  headers      │ │          │          │
        │  │- Data types   │ │          │          │
        │  │- Cell refs    │ │          │          │
        │  │- Formulas     │ │          │          │
        │  └───────────────┘ │          │          │
        │          │          │          │          │
        └──────────┴──────────┴──────────┴──────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │   Extracted Raw Text     │
        │   + Metadata (source,    │
        │     page/sheet, timestamp│
        │     column names, etc)   │
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │   Text Preprocessing     │
        │   - Clean whitespace     │
        │   - Remove special chars │
        │   - Normalize text       │
        │   - Preserve table struct│
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │    Text Chunking         │
        │  ┌────────────────────┐  │
        │  │ Regular Chunking   │  │
        │  │ - Semantic chunking│  │
        │  │ - Fixed-size chunks│  │
        │  │ - With overlap     │  │
        │  └────────────────────┘  │
        │  ┌────────────────────┐  │
        │  │ Tabular Chunking   │  │
        │  │ - Row-based chunks │  │
        │  │ - Sheet-based chunks│ │
        │  │ - Preserve headers │  │
        │  │ - Include context  │  │
        │  └────────────────────┘  │
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │    Text Chunks           │
        │  [Chunk 1, Chunk 2, ...] │
        │  Each with metadata:     │
        │  - Source file           │
        │  - Sheet name (Excel)    │
        │  - Column names (Excel)  │
        │  - Row numbers (Excel)   │
        │  - Page (PDF)            │
        │  - Timestamp             │
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │  Embedding Manager       │
        │  - Load embedding model  │
        │  - Generate vectors      │
        │  - Batch processing      │
        │  - Handle structured data│
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │   Vector Embeddings      │
        │   [768-dim vectors]      │
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │   FAISS Manager          │
        │   - Create/Load index    │
        │   - Add vectors          │
        │   - Save to disk         │
        └──────────────────────────┘
                       │
                       ↓
        ┌──────────────────────────┐
        │   FAISS Vector Store     │
        │   (data/faiss_stores/    │
        │    hr_portal/ or         │
        │    ai_server_logs/ or    │
        │    financial_data/)      │
        └──────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────────────┐
│                           QUERY PIPELINE                                     │
└─────────────────────────────────────────────────────────────────────────────┘

[User Enters Query]
   "What were Q3 sales figures?" or "What is the vacation policy?"
        │
        ↓
┌───────────────────────┐
│  Query Preprocessing  │
│  - Clean query text   │
│  - Extract intent     │
│  - Detect task type   │
│    (QA/Summary/       │
│     TableQuery)       │
│  - Identify if query  │
│    needs tabular data │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Select FAISS Store   │
│  (hr_portal,          │
│   ai_server_logs,     │
│   financial_data,     │
│   general, etc.)      │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Embedding Manager    │
│  - Embed user query   │
│  - Generate vector    │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│   Query Vector        │
│   [768-dim vector]    │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│   FAISS Retriever     │
│   - Similarity search │
│   - Fetch top-k docs  │
│   - Filter by metadata│
│   - Prioritize table  │
│     data if needed    │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Retrieved Chunks     │
│  [Doc1, Doc2, ..., Dk]│
│  with similarity scores│
│  + table metadata     │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Optional: Re-ranker  │
│  - Boost tabular data │
│    for numerical qs   │
│  - Re-score results   │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Top Relevant Docs    │
│  (sorted by relevance)│
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Context Builder      │
│  - Combine chunks     │
│  - Add source info    │
│  - Format tables      │
│  - Preserve structure │
│  - Format for LLM     │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Formatted Context    │
│  "Based on these docs:│
│   Doc1 (PDF p.5): ... │
│   Doc2 (Sheet1):      │
│   | Name | Sales |    │
│   | John | 5000  |    │
│   Answer the question"│
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Prompt Template      │
│  - QA template        │
│  - Summary template   │
│  - Table QA template  │
│  - Custom templates   │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  LLM Manager          │
│  - Load LLM (GPT/     │
│    Claude/Llama)      │
│  - Generate response  │
│  - Stream output      │
│  - Parse tables       │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Generated Answer     │
│  + Source Citations   │
│  + Confidence Score   │
│  + Table refs         │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Response Formatter   │
│  - Add citations      │
│  - Format markdown    │
│  - Format tables      │
│  - Include metadata   │
└───────────────────────┘
        │
        ↓
[Return to User]
   "According to Q3_Sales.xlsx
    (Sheet: Regional, Row 15-20),
    total sales were $250K..."


═══════════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────────────┐
│                    EXCEL-SPECIFIC PROCESSING FLOW                            │
└─────────────────────────────────────────────────────────────────────────────┘

[Excel File Upload]
        │
        ↓
┌───────────────────────┐
│  Excel Processor      │
│  - Detect file type   │
│    (.xlsx/.xls/.csv)  │
│  - Load with pandas/  │
│    openpyxl           │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Sheet Iterator       │
│  For each sheet:      │
└───────────────────────┘
        │
        ├─→ Extract sheet name
        ├─→ Extract column headers
        ├─→ Extract data types
        ├─→ Identify key columns
        ├─→ Handle merged cells
        ├─→ Extract formulas (optional)
        │
        ↓
┌───────────────────────┐
│  Tabular Chunker      │
│  Strategy selection:  │
│                       │
│  Option 1: Row-based  │
│  - Group 5-10 rows    │
│  - Include headers    │
│  - Preserve context   │
│                       │
│  Option 2: Sheet-based│
│  - Entire sheet as    │
│    one chunk (small)  │
│                       │
│  Option 3: Semantic   │
│  - Group by content   │
│  - Related rows       │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Text Representation  │
│  Format options:      │
│                       │
│  1. Markdown table:   │
│  | Col1 | Col2 |      │
│  |------|------|      │
│  | Val1 | Val2 |      │
│                       │
│  2. Natural language: │
│  "In the Sales sheet, │
│   John had 5000 sales"│
│                       │
│  3. JSON-like:        │
│  {"Name": "John",     │
│   "Sales": 5000}      │
└───────────────────────┘
        │
        ↓
┌───────────────────────┐
│  Add Rich Metadata    │
│  - Filename           │
│  - Sheet name         │
│  - Column names       │
│  - Row numbers        │
│  - Data types         │
│  - Upload timestamp   │
│  - File hash          │
└───────────────────────┘
        │
        ↓
[Continue to Embedding]


═══════════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────────────┐
│                        SYSTEM ARCHITECTURE (UPDATED)                         │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────┐
│   User Layer    │
└─────────────────┘
        │
        ├──→ Web UI (Streamlit/Gradio)
        ├──→ REST API (FastAPI)
        └──→ CLI Scripts
        │
        ↓
┌─────────────────────────────────────┐
│         Pipeline Layer              │
│  ┌─────────────────────────────┐   │
│  │  Ingestion Pipeline         │   │
│  │  - Multi-format support     │   │
│  └─────────────────────────────┘   │
│  ┌─────────────────────────────┐   │
│  │  Query Pipeline             │   │
│  │  - Table-aware retrieval    │   │
│  └─────────────────────────────┘   │
└─────────────────────────────────────┘
        │
        ↓
┌────────────────────────────────────┐
│      Component Layer               │
│  ┌──────────┐  ┌──────────┐        │
│  │Processors│  │Chunking  │        │
│  │- PDF     │  │- Text    │        │
│  │- Excel   │  │- Tabular  │       │
│  │- Image   │  │- Semantic│        │
│  │- Text    │  │          │        │
│  │- Web     │  │          │        │
│  └──────────┘  └──────────┘        │
│  ┌──────────┐  ┌──────────┐        │
│  │Embeddings│  │Retrieval │        │
│  │- Text    │  │- Standard│        │
│  │- Table   │  │- Hybrid  │        │
│  └──────────┘  └──────────┘        │
│  ┌──────────┐  ┌──────────┐        │
│  │VectorStore│ │LLM Manager│       │
│  └──────────┘  └──────────┘        │
└────────────────────────────────────┘
        │
        ↓
┌─────────────────────────────────────┐
│       Storage Layer                 │
│  ┌────────────────────────┐         │
│  │  FAISS Indexes         │         │
│  │  - hr_portal/          │         │
│  │  - ai_server_logs/     │         │
│  │  - financial_data/     │         │
│  │  - general/            │         │
│  └────────────────────────┘         │
│  ┌────────────────────────┐         │
│  │  Raw Data Storage      │         │
│  │  - PDFs                │         │
│  │  - Excel files         │         │
│  │  - Images              │         │
│  │  - Text files          │         │
│  └────────────────────────┘         │
└─────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────────────┐
│                    DATA FLOW SUMMARY (UPDATED)                               │
└─────────────────────────────────────────────────────────────────────────────┘

INGESTION:
Files (PDF/Excel/Image/Text/Web) → Extract Text/Data → Clean → 
Chunk (Text/Tabular) → Embed → Store in FAISS

QUERYING:
Query → Detect Type → Embed → Search FAISS → Retrieve Docs → 
Build Context (with tables) → LLM → Answer (with citations)

EXCEL SPECIFIC:
Excel → Parse Sheets → Extract Tables → Chunk by Rows/Sheets → 
Add Metadata → Embed → Store → Query with Table Context

COMPONENTS INTERACTION:
┌────────┐      ┌─────────┐      ┌──────────┐      ┌─────┐
│ User   │ ←──→ │Pipeline │ ←──→ │Components│ ←──→ │Store│
└────────┘      └─────────┘      └──────────┘      └─────┘
                                       ↓
                                 ┌──────────┐
                                 │  Excel   │
                                 │Processor │
                                 └──────────┘


═══════════════════════════════════════════════════════════════════════════════