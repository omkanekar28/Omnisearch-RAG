langchain-rag-system/
├── .github/
│   └── workflows/
│       └── ci.yml                    # CI/CD pipeline
├── data/
│   ├── raw/                          # Upload raw files here
│   │   ├── pdfs/
│   │   ├── images/
│   │   ├── text/
│   │   └── urls.txt
│   ├── processed/                    # Processed/cleaned text
│   └── faiss_stores/                 # Vector stores
│       ├── hr_portal/
│       ├── ai_server_logs/
│       └── general/
├── src/
│   ├── __init__.py
│   ├── config/
│   │   ├── __init__.py
│   │   └── settings.py               # Configuration management
│   ├── ingestion/
│   │   ├── __init__.py
│   │   ├── pdf_processor.py          # PyMuPDF4LLM logic
│   │   ├── image_processor.py        # Tesseract OCR logic
│   │   ├── web_scraper.py            # URL scraping
│   │   ├── text_processor.py         # Plain text handling
│   │   └── base_processor.py         # Abstract base class
│   ├── chunking/
│   │   ├── __init__.py
│   │   ├── text_splitter.py          # Chunking strategies
│   │   └── semantic_chunker.py       # Advanced chunking
│   ├── embeddings/
│   │   ├── __init__.py
│   │   └── embedding_manager.py      # Embedding model handling
│   ├── vectorstore/
│   │   ├── __init__.py
│   │   ├── faiss_manager.py          # FAISS operations
│   │   └── store_registry.py         # Manage multiple stores
│   ├── retrieval/
│   │   ├── __init__.py
│   │   ├── retriever.py              # Retrieval logic
│   │   └── reranker.py               # Optional re-ranking
│   ├── llm/
│   │   ├── __init__.py
│   │   ├── llm_manager.py            # LLM integration
│   │   └── prompt_templates.py       # Prompt engineering
│   ├── pipeline/
│   │   ├── __init__.py
│   │   ├── ingestion_pipeline.py     # End-to-end ingestion
│   │   └── query_pipeline.py         # End-to-end querying
│   └── utils/
│       ├── __init__.py
│       ├── logger.py                 # Logging utilities
│       ├── file_utils.py             # File operations
│       └── metadata_handler.py       # Metadata management
├── api/
│   ├── __init__.py
│   ├── main.py                       # FastAPI/Flask app
│   ├── routes/
│   │   ├── __init__.py
│   │   ├── upload.py                 # File upload endpoints
│   │   └── query.py                  # Query endpoints
│   └── schemas/
│       ├── __init__.py
│       └── models.py                 # Pydantic models
├── tests/
│   ├── __init__.py
│   ├── test_ingestion/
│   ├── test_chunking/
│   ├── test_retrieval/
│   └── test_pipeline/
├── scripts/
│   ├── build_faiss_store.py          # CLI to build stores
│   ├── query_store.py                # CLI to query stores
│   └── evaluate_retrieval.py        # Evaluation scripts
├── notebooks/
│   ├── exploration.ipynb             # Data exploration
│   └── evaluation.ipynb              # Performance analysis
├── docs/
│   ├── setup.md
│   ├── architecture.md
│   └── api_docs.md
├── .env.example                      # Environment variables template
├── .gitignore
├── requirements.txt                  # Python dependencies
├── setup.py                          # Package installation
├── README.md
└── LICENSE